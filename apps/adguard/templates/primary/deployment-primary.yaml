apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "adguard.fullname" . }}-primary
  labels:
    app.kubernetes.io/name: {{ template "adguard.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: "adguard-primary"
    {{- include "labels" . | nindent 4 }}
spec:
  revisionHistoryLimit: 0
  replicas: {{ .Values.primary.replicas }}
  strategy: {{ toYaml .Values.primary.strategy | nindent 4 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "adguard.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: "adguard-primary"
      {{- include "labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        config-hash: {{ print .Values.config | sha1sum  }}
        app.kubernetes.io/name: {{ template "adguard.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: "adguard-primary"
        {{- include "labels" . | nindent 8 }}
    spec:
      containers:
        - name: adguard
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: IfNotPresent
          env:
            - name: TZ
              value: "Europe/Amsterdam"
          args:
            - --web-addr
            - 0.0.0.0:3000
            - --no-check-update
          ports:
            - name: web
              containerPort: 3000
              protocol: TCP
          resources: {{ toYaml .Values.primary.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /opt/adguardhome
              subPath: conf
            - name: data
              mountPath: /opt/adguardhome
              subPath: work
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ template "adguard.fullname" . }}-primary-data
      tolerations:
      - key: essential
        operator: Exists
