apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "infro.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ template "infro.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: "core"
    {{- include "labels" . | nindent 4 }}
spec:
  revisionHistoryLimit: 0
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "infro.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: "core"
      {{- include "labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "infro.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: "core"
        {{- include "labels" . | nindent 8 }}
    spec:
      automountServiceAccountToken: false
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
      securityContext: {{ toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: core
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          args:
            - poll
            - --owner
            - $(owner)
            - --config
            - $(config)
          securityContext: {{ toYaml .Values.securityContext | nindent 12 }}
          env:
            - name: config
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.secretName}}
                  key: config
            - name: owner
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.secretName}}
                  key: owner
          volumeMounts:
            - mountPath: /tmp
              name: tmp
      volumes:
        - name: tmp
          emptyDir: {}
