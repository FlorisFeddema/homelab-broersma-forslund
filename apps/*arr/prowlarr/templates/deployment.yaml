apiVersion: apps/v1
kind: Deployment
metadata:
  name: prowlarr
spec:
  replicas: 1
  revisionHistoryLimit: 0
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/instance: prowlarr
      app.kubernetes.io/name: prowlarr
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: prowlarr
        app.kubernetes.io/name: prowlarr 
    spec:
      automountServiceAccountToken: false
      initContainers:
        - name: configure-prowlarr
          image: '{{ .Values.images.alpine.repository }}:{{ .Values.images.alpine.version }}'
              command:
              - "sh"
              - "/init-prowlarr/init-prowlarr.sh"
          volumeMounts:
            - mountPath: /init-prowlarr
              name: init-files-prowlarr
            - mountPath: /config
              name: data
              readOnly: false
      containers:
        - name: prowlarr
          image: '{{ .Values.images.prowlarr.repository }}:{{ .Values.images.prowlarr.version }}'
          env:
            - name: TZ
              value: TZ=Europe/Amsterdam
          ports:
            - containerPort: 9696
              name: http
              protocol: TCP
          volumeMounts:
            - mountPath: /config
              name: data
              readOnly: false
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
      volumes:
        - name: init-files-prowlarr
          configMap:
            name: init-prowlarr-cm
        - name: data
          persistentVolumeClaim:
            claimName: prowlarr-data
